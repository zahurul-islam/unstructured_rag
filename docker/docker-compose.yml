version: '3.8'

services:
  # Milvus standalone service
  milvus:
    image: milvusdb/milvus:v2.3.1
    container_name: milvus-standalone
    command: ["milvus", "run", "standalone"]
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
    volumes:
      - milvus_data:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    networks:
      - milvus_network
    depends_on:
      - etcd
      - minio
    restart: always

  # Etcd service
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: milvus-etcd
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd_data:/etcd
    command:
      - etcd
      - --advertise-client-urls=http://127.0.0.1:2379
      - --listen-client-urls=http://0.0.0.0:2379
      - --data-dir=/etcd
    networks:
      - milvus_network
    restart: always

  # MinIO service
  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: milvus-minio
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - minio_data:/data
    command: minio server /data
    networks:
      - milvus_network
    restart: always

  # RAG API service
  rag-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: rag-api
    depends_on:
      - milvus
    environment:
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
      - MILVUS_COLLECTION=unstructured_rag
      - EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - APP_HOST=0.0.0.0
      - APP_PORT=8000
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
    networks:
      - milvus_network
    restart: always

networks:
  milvus_network:
    driver: bridge

volumes:
  milvus_data:
  etcd_data:
  minio_data:
